'use client'

import React, { useState } from 'react'
import { BirthData } from './NatalChartGenerator'

interface NatalChartFormProps {
  onSubmit: (data: BirthData) => void
}

const NatalChartForm: React.FC<NatalChartFormProps> = ({ onSubmit }) => {
  const [formData, setFormData] = useState<BirthData>({
    date: '',
    time: '',
    city: ''
  })
  const [errors, setErrors] = useState<Record<string, string>>({})

  const validateForm = (): boolean => {
    const newErrors: Record<string, string> = {}

    if (!formData.date) {
      newErrors.date = '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞'
    }

    if (!formData.time) {
      newErrors.time = '–í—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
    }

    if (!formData.city) {
      newErrors.city = '–ì–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
    }

    setErrors(newErrors)
    return Object.keys(newErrors).length === 0
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    
    if (validateForm()) {
      onSubmit(formData)
    }
  }

  const handleInputChange = (field: keyof BirthData, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
    
    // –£–±–∏—Ä–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[field]) {
      setErrors(prev => ({
        ...prev,
        [field]: ''
      }))
    }
  }

  return (
    <div className="bg-black/30 backdrop-blur-sm border border-white/10 rounded-lg p-8">
      <div className="max-w-2xl mx-auto">
        <div className="text-center mb-8">
          <h2 className="text-2xl font-semibold text-star-gold mb-3">
            –°–æ–∑–¥–∞—Ç—å –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É
          </h2>
          <p className="text-gray-300">
            –í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
          </p>
        </div>

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è */}
          <div>
            <label htmlFor="date" className="block text-star-gold font-medium mb-2">
              –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
            </label>
            <input
              type="date"
              id="date"
              value={formData.date}
              onChange={(e) => handleInputChange('date', e.target.value)}
              className="w-full px-4 py-3 bg-black/50 border border-white/20 rounded-lg text-white focus:border-star-gold focus:outline-none transition-colors"
            />
            {errors.date && (
              <p className="text-red-400 text-sm mt-1">{errors.date}</p>
            )}
          </div>

          {/* –í—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è */}
          <div>
            <label htmlFor="time" className="block text-star-gold font-medium mb-2">
              –í—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è
            </label>
            <input
              type="time"
              id="time"
              value={formData.time}
              onChange={(e) => handleInputChange('time', e.target.value)}
              className="w-full px-4 py-3 bg-black/50 border border-white/20 rounded-lg text-white focus:border-star-gold focus:outline-none transition-colors"
            />
            {errors.time && (
              <p className="text-red-400 text-sm mt-1">{errors.time}</p>
            )}
            <p className="text-gray-400 text-sm mt-1">
              –ß–µ–º —Ç–æ—á–Ω–µ–µ –≤—Ä–µ–º—è, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –±—É–¥–µ—Ç –≤–∞—à–∞ –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞
            </p>
          </div>

          {/* –ì–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è */}
          <div>
            <label htmlFor="city" className="block text-star-gold font-medium mb-2">
              –ì–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è
            </label>
            <input
              type="text"
              id="city"
              value={formData.city}
              onChange={(e) => handleInputChange('city', e.target.value)}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è"
              className="w-full px-4 py-3 bg-black/50 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:border-star-gold focus:outline-none transition-colors"
            />
            {errors.city && (
              <p className="text-red-400 text-sm mt-1">{errors.city}</p>
            )}
            <p className="text-gray-400 text-sm mt-1">
              –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–ª–∏ –±–ª–∏–∂–∞–π—à–∏–π –∫—Ä—É–ø–Ω—ã–π –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç
            </p>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
          <div className="pt-4">
            <button
              type="submit"
              className="w-full bg-gradient-to-r from-star-gold to-yellow-500 hover:from-yellow-500 hover:to-star-gold text-black font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105"
            >
              –°–æ–∑–¥–∞—Ç—å –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É ‚ú®
            </button>
          </div>
        </form>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-8 p-4 bg-blue-900/20 border border-blue-500/30 rounded-lg">
          <h4 className="text-blue-300 font-medium mb-2">üí° –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
          <ul className="text-gray-300 text-sm space-y-1">
            <li>‚Ä¢ –í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã–º (–ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ –¥–∞–Ω–Ω—ã–º –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)</li>
            <li>‚Ä¢ –ï—Å–ª–∏ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ</li>
            <li>‚Ä¢ –ì–æ—Ä–æ–¥ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–æ–º–æ–≤ –≥–æ—Ä–æ—Å–∫–æ–ø–∞</li>
          </ul>
        </div>
      </div>
    </div>
  )
}

export default NatalChartForm
